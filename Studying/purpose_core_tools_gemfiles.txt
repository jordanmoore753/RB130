--- Bundler

Bundler is used to manage the various dependencies in your project. For example, your project may need version 10.4 of reporters, 10.7 of rubocop, and Ruby 2.2.1. Bundler lets you pick and tell your program which versions of gems and ruby you would like the program to run. Heck, Bundler will even install the varying dependencies if you give it the command to.

--- Rake

Rake is used to automate tasks. These tasks are building, testing, packaging, and insstalling programs. It comes by default with modern Ruby installation. Additionally, you can perform Git tasks with Rake, set up and initialize databases, create directories and files, and rebuild certain files/directories based on changes to other files/directories.

The purpose of automating these tasks is to reduce redundancy and repeitition. Additionally, having a system by which you run all tests, create release notes, and make backups, only makes your program safer in comparison to doing everything manually.

--- RVM / Rbenv

RVM is a Ruby version manager. This allows a user to have multiple version of Ruby installed, in addition to different versions of RubyGems installed. RVM lets a user switch between these versions in order to ensure that the right program uses the right version of Ruby. This is important because Ruby is a dynamic language and is changed frequently, meaning that previous versions may lack certain updates. It's important that a programmer have a 'time capsule' of the dependencies of a certain version so that everything in the program doesn't need to be updated every time a new release comes out. It allows for more internally consistent programs.

--- Gems

Gems are packages of code that you can download, install and use in your Ruby programs or from the command line. There are thousands of gems, and we've already used a bunch of them in RB101-130. 

Rubocop, pry, sequel, rails.

Gems allow you greater functionality with your code and provides streamlined ways to create new programs. Since we don't need to create every tool or capabiilty from scratch, this opens up time and effort for us to work on other parts of our programs.

--- Gemfile

A gemfile is a file that contains the ruby version, and all gem versions for a given project. It is used with Bundler to install the dependencies (versions) for your program. 

source 'https://rubygems.org'

ruby '2.4.2'
gem 'sinatra'
gem 'rails'
gem 'rack' '~>10.4.0'

Gemfile uses a DSL to specify the dependencies needed for the project.

You run `bundle install` in the directory that contains the gemfile and this creates the gemfile.lock which is the text document containing all of the dependency version for your project. The bundle install command installs any dependencies that are not already installed in your version of Ruby.


Gemfile is a written list of all the dependencies and Ruby version for your project. When you run `bundle install` Bundler will install any
dependencies that aren't installed already, including the Ruby version specified. Gemfile uses a DSL to make writing the dependencies
intuitive. Gemfile.lock is the file created in the same directory as Gemfile, and is a document containing a list of all the dependencies
in your project. This updates each time you run bundle install and modify something. Using gemfile and bundler allows you to manage dependencies
in your project and standardize a project to a certain ruby version which is essential in making a product.

Rbenv and RVM are Ruby version managers and can manage several different versions of Ruby on one machine. You can switch freely between them and install
specific versions of Gems for each Ruby version and also use them at will. Having a version manager is essential in making a project wherein it is standardized
to avoid old Ruby conventions and new updates that may require large changes.

Gems are packages of code that a user can download, install, create, and use in their own program or command line. Gems are abundant and freely available
online. Gems are important because they allow greater functionality while eliminating the repetition of creating the gem yourself. Someone else has
already gone to the trouble of creating it, so all you need to do is implement it.

Rake is an automation tool that lets you automate common tasks for your Ruby project. These are but not limited to: testing, packaging, installing, initialize databases, manage Git.
Rake is important and a core tool because it eliminates redundancy and gives you more time to work on the parts of your project that aren't repetitive tasks.

Bundler is arguably the most important gem. It is a dependency manager, much like RVM, but is preferred by most Ruby developers. Bundler allows you
to define and manage the dependencies on a project-level basis. You define which dependencies a program has and Bunder installs the correct ones. This is
important because it lets you standardize to a Ruby version and also be on the same page as everyone else on the team. Also, it prevents a huge amount 
of errors that would be held between people running slightly different ruby versions.